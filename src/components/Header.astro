---
// src/components/Header.astro
import { getLangFromUrl, useTranslations, languages } from '../lib/i18n';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

const currentPath = Astro.url.pathname;
---

<header class="bg-white shadow-lg sticky top-0 z-50">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="flex justify-between items-center py-4">
      <!-- Logo -->
      <div class="flex items-center">
        <a href={`/${lang === 'es' ? '' : lang}`} class="flex items-center space-x-3">
          <div class="w-10 h-10 bg-blue-600 rounded-lg flex items-center justify-center">
            <span class="text-white font-bold text-xl">FP</span>
          </div>
          <div class="hidden sm:block">
            <h1 class="text-xl font-bold text-gray-900">Centro FP</h1>
            <p class="text-sm text-gray-600">Formaci√≥n Profesional</p>
          </div>
        </a>
      </div>

      <!-- Navigation -->
      <nav class="hidden md:flex space-x-8">
        <a 
          href={`/${lang === 'es' ? '' : lang}`}
          class={`px-3 py-2 rounded-md text-sm font-medium transition-colors ${
            (currentPath === '/' && lang === 'es') || currentPath === `/${lang}` 
              ? 'bg-blue-100 text-blue-700' 
              : 'text-gray-700 hover:text-blue-700 hover:bg-blue-50'
          }`}
        >
          {t('nav.home')}
        </a>
        <a 
          href={`/${lang === 'es' ? 'noticias' : `${lang}/news`}`}
          class={`px-3 py-2 rounded-md text-sm font-medium transition-colors ${
            currentPath.includes('news') || currentPath.includes('noticias')
              ? 'bg-blue-100 text-blue-700' 
              : 'text-gray-700 hover:text-blue-700 hover:bg-blue-50'
          }`}
        >
          {t('nav.news')}
        </a>
        <a 
          href={`/${lang === 'es' ? 'cursos' : `${lang}/courses`}`}
          class={`px-3 py-2 rounded-md text-sm font-medium transition-colors ${
            currentPath.includes('courses') || currentPath.includes('cursos')
              ? 'bg-blue-100 text-blue-700' 
              : 'text-gray-700 hover:text-blue-700 hover:bg-blue-50'
          }`}
        >
          {t('nav.courses')}
        </a>
      </nav>

      <!-- Language Selector & Mobile Menu -->
      <div class="flex items-center space-x-4">
        <!-- Language Selector -->
        <div class="relative">
          <select 
            id="language-selector"
            class="appearance-none bg-white border border-gray-300 rounded-md px-3 py-2 pr-8 text-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
          >
            {Object.entries(languages).map(([code, name]) => (
              <option value={code} selected={code === lang}>
                {name}
              </option>
            ))}
          </select>
          <div class="absolute inset-y-0 right-0 flex items-center px-2 pointer-events-none">
            <svg class="w-4 h-4 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
            </svg>
          </div>
        </div>

        <!-- Mobile Menu Button -->
        <button 
          id="mobile-menu-button"
          class="md:hidden inline-flex items-center justify-center p-2 rounded-md text-gray-700 hover:text-blue-700 hover:bg-blue-50 focus:outline-none focus:ring-2 focus:ring-blue-500"
        >
          <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
          </svg>
        </button>
      </div>
    </div>

    <!-- Mobile Menu -->
    <div id="mobile-menu" class="hidden md:hidden pb-4">
      <div class="space-y-2">
        <a 
          href={`/${lang === 'es' ? '' : lang}`}
          class={`block px-3 py-2 rounded-md text-base font-medium transition-colors ${
            (currentPath === '/' && lang === 'es') || currentPath === `/${lang}` 
              ? 'bg-blue-100 text-blue-700' 
              : 'text-gray-700 hover:text-blue-700 hover:bg-blue-50'
          }`}
        >
          {t('nav.home')}
        </a>
        <a 
          href={`/${lang === 'es' ? 'noticias' : `${lang}/news`}`}
          class={`block px-3 py-2 rounded-md text-base font-medium transition-colors ${
            currentPath.includes('news') || currentPath.includes('noticias')
              ? 'bg-blue-100 text-blue-700' 
              : 'text-gray-700 hover:text-blue-700 hover:bg-blue-50'
          }`}
        >
          {t('nav.news')}
        </a>
        <a 
          href={`/${lang === 'es' ? 'cursos' : `${lang}/courses`}`}
          class={`block px-3 py-2 rounded-md text-base font-medium transition-colors ${
            currentPath.includes('courses') || currentPath.includes('cursos')
              ? 'bg-blue-100 text-blue-700' 
              : 'text-gray-700 hover:text-blue-700 hover:bg-blue-50'
          }`}
        >
          {t('nav.courses')}
        </a>
      </div>
    </div>
  </div>
</header>

<script>
  // Mobile menu toggle
  const mobileMenuButton = document.getElementById('mobile-menu-button');
  const mobileMenu = document.getElementById('mobile-menu');
  
  mobileMenuButton?.addEventListener('click', () => {
    mobileMenu?.classList.toggle('hidden');
  });

  // Language selector
  const languageSelector = document.getElementById('language-selector') as HTMLSelectElement;
  languageSelector?.addEventListener('change', (e) => {
    const newLang = (e.target as HTMLSelectElement).value;
    const currentPath = window.location.pathname;
    const currentLang = currentPath.startsWith('/en') ? 'en' : 'es';
    
    let newPath = '';
    if (newLang === 'es') {
      // Remove /en prefix if switching to Spanish
      newPath = currentPath.replace(/^\/en/, '') || '/';
    } else {
      // Add /en prefix if switching to English
      if (currentLang === 'es') {
        newPath = '/en' + (currentPath === '/' ? '' : currentPath);
      } else {
        newPath = currentPath;
      }
    }
    
    window.location.pathname = newPath;
  });
</script>